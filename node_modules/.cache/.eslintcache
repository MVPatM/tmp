[{"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\index.js":"1","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\reportWebVitals.js":"2","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\App.js":"3","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\MainPage\\MainPage.jsx":"4","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\LoginPage\\LoginPage.jsx":"5","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\MyNFT\\MyNFT.jsx":"6","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\SearchNFT\\SearchNFT.jsx":"7","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\SellNFT\\SellNFT.jsx":"8","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\IntegrateNFT\\IntegrateNFT.jsx":"9","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\MintNFT\\MintNFT.jsx":"10","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\utils\\axios.js":"11","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\utils\\axios1.js":"12"},{"size":540,"mtime":1685370230529,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1685370230529,"results":"15","hashOfConfig":"14"},{"size":461,"mtime":1685370230517,"results":"16","hashOfConfig":"14"},{"size":1922,"mtime":1685487253964,"results":"17","hashOfConfig":"14"},{"size":3873,"mtime":1685608718829,"results":"18","hashOfConfig":"14"},{"size":1662,"mtime":1685625233956,"results":"19","hashOfConfig":"14"},{"size":2674,"mtime":1685625243126,"results":"20","hashOfConfig":"14"},{"size":1029,"mtime":1685370230527,"results":"21","hashOfConfig":"14"},{"size":3613,"mtime":1685618137004,"results":"22","hashOfConfig":"14"},{"size":2072,"mtime":1685651859767,"results":"23","hashOfConfig":"14"},{"size":288,"mtime":1685639504659,"results":"24","hashOfConfig":"14"},{"size":314,"mtime":1685652553235,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"sq5c3k",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\index.js",[],[],[],"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\App.js",[],[],"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\MainPage\\MainPage.jsx",[],[],"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\LoginPage\\LoginPage.jsx",[],[],"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\MyNFT\\MyNFT.jsx",["67"],[],"import React, { useState , useEffect} from 'react';\r\nimport styles from \"./mynftcss.module.css\";\r\nimport apiClient from '../utils/axios';\r\n\r\n\r\nfunction MyNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [nftIndex, setnftIndex] = useState(0);\r\n    useEffect(async () => {\r\n        //get my info\r\n        await apiClient\r\n          .get(\"/myNFT\")\r\n          .then((res) => {\r\n            setnftList(res.data.nfts);\r\n          })\r\n          .catch((err) => {\r\n            alert(`${err}`);\r\n          });\r\n      }, []);\r\n\r\n\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                <div key = {idx} className = {styles.nftcomponent} onClick = {() => setnftIndex(idx)}>\r\n                    {nft.tokenId}의 NFT\r\n                </div>\r\n            ))\r\n    }\r\n    return (\r\n        <div className={styles.mynft}>\r\n            <div className={styles.nftinfo}>\r\n                {nftList.length > 0 && \r\n                <div>\r\n                <div className = {styles.ownertitle}>{nftList[nftIndex].owner}의 NFT</div>\r\n                <div>-tokenId : {nftList[nftIndex].tokenId}</div>\r\n                <div>-Column : {nftList[nftIndex].metaData.columns.join(\", \")}</div>\r\n                <div>-Data size : {nftList[nftIndex].metaData.dataSize}</div>\r\n                <div>-Null Ratio : {nftList[nftIndex].metaData.nullRatio}</div>\r\n                </div>\r\n                }   \r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>NFT LIST</div>\r\n                {RenderNFTList()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyNFT;","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\SearchNFT\\SearchNFT.jsx",["68"],[],"import React, { useState, useEffect } from 'react';\r\nimport styles from \"./searchnftcss.module.css\";\r\nimport apiClient from '../utils/axios';\r\n\r\n\r\nfunction SearchNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [nftIndex, setnftIndex] = useState(0);\r\n    useEffect(() => {\r\n        //get my info\r\n        apiClient\r\n          .get(\"/SearchNFT\")\r\n          .then((res) => {\r\n            setnftList(res.data.nfts);\r\n          })\r\n          .catch((err) => {\r\n            alert(`${err}`)\r\n          });\r\n      }, []);\r\n\r\n    const searching = (event) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.currentTarget);\r\n        const payload = {\r\n            tokenId : data.get(\"tokenId\"),\r\n            tokenURI : data.get(\"tokenURI\")\r\n        }\r\n        apiClient\r\n            .post(\"/SearchNFT/search\")\r\n            .then((res) => {\r\n                setnftList(res.data);\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n        \r\n    }\r\n\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                <div key = {idx} className = {styles.nftcomponent} onClick = {() => setnftIndex(idx)}>\r\n                    {nft.tokenId}의 NFT\r\n                </div>\r\n            ))\r\n    }\r\n    return (\r\n        <div className = {styles.searchnft}>\r\n            <div className={styles.nftinfo}>\r\n                {nftList.length > 0 && <div className={styles.nftmetadata}>\r\n                <div className = {styles.ownertitle}>{nftList[nftIndex].tokenId}의 NFT</div>\r\n                <div>-tokenId : {nftList[nftIndex].tokenId}</div>\r\n                <div>-Column : {nftList[nftIndex].metaData.columns.join(\", \")}</div>\r\n                <div>-Data size : {nftList[nftIndex].metaData.dataSize}</div>\r\n                <div>-Null Ratio : {nftList[nftIndex].metaData.nullRatio}</div>\r\n                </div>}\r\n                {nftList.length > 0 && <button className={styles.buybutton}>Buy NFT</button>}\r\n            </div>\r\n            <div className={styles.search}>\r\n                <div>\r\n                    <form onSubmit={searching} className={styles.inputcontainer}>\r\n                    <input className = {styles.input} id = \"tokenId\">\r\n\r\n                    </input>\r\n                    <button className = {styles.searchbutton} type = \"submit\">\r\n                        Search\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n                <div className={styles.searchlist}>\r\n                    {RenderNFTList()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchNFT;","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\SellNFT\\SellNFT.jsx",["69"],[],"import React, { useState } from 'react';\r\nimport styles from \"./sellnftcss.module.css\";\r\n\r\n\r\nfunction SellNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [nftIndex, setnftIndex] = useState(0);\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                <div key = {idx} className = {styles.nftcomponent} onClick = {() => setnftIndex(idx)}>\r\n                    {nft}\r\n                </div>\r\n            ))\r\n    }\r\n    return (\r\n        <div className={styles.mynft}>\r\n            <div className={styles.nftinfo}>\r\n                <div className={styles.nftmetadata}>\r\n                    {nftList[nftIndex]}의 메타데어터\r\n                </div>\r\n                <button className={styles.sellbutton}>SELL NFT</button>\r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>INTEGRATED NFT LIST</div>\r\n                {RenderNFTList()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SellNFT;","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\IntegrateNFT\\IntegrateNFT.jsx",["70"],[],"import React, { useState, useEffect } from 'react';\r\nimport styles from \"./integratenftcss.module.css\";\r\nimport apiClient from '../utils/axios';\r\n\r\n\r\nfunction IntegrateNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [selectedNum, setSelectedNum] = useState(0);\r\n    const [selectednftList, setselectednftList] = useState([]);\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //get my info\r\n        apiClient\r\n          .get(\"/integrateNFT\")\r\n          .then((res) => {\r\n            setnftList(res.data.nfts);\r\n            setselectednftList(Array(nftList.length).fill(false));\r\n          })\r\n          .catch((err) => {\r\n            alert(`${err}`);\r\n          });\r\n      }, []);\r\n\r\n    const sendNFT = async () => {\r\n        let sendList = [];\r\n        for(let i = 0; i < nftList.length; i ++){\r\n            if(selectednftList[i] === true){\r\n                sendList.push(nftList[i].tokenURI);\r\n            }\r\n        }\r\n\r\n        let sendList1 = [];\r\n        for(let i = 0; i < nftList.length; i ++){\r\n            if(selectednftList[i] === true){\r\n                sendList1.push(nftList[i].tokenId);\r\n            }\r\n        }\r\n\r\n        const payload = {\r\n            tokenURI : sendList,\r\n            tokenId : sendList1\r\n        }\r\n\r\n        await apiClient.post(\"/integrateNFT/mint\", payload)\r\n            .then((res) => {\r\n                if (res.data.isSuccess === true){\r\n                    setResult(res.data.nft);\r\n                    alert('Integrated NFT mint success');\r\n                }\r\n                else if (res.data.isSuccess === false) {\r\n                    alert(`${res.data.msg}`);\r\n                }\r\n            })\r\n            .catch ((err) => {\r\n                alert(`Integrated NFT Mint error ${err}`);\r\n            })\r\n    }\r\n\r\n\r\n    const changeSelectednftList = (index) => {\r\n        let copyList = [...selectednftList];\r\n        copyList[index] = !copyList[index];\r\n        if(copyList[index]) setSelectedNum(selectedNum + 1);\r\n        else setSelectedNum(selectedNum - 1);\r\n        console.log(copyList[index]);\r\n        setselectednftList(copyList);\r\n    }\r\n\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                <button key = {idx} className = {`${styles.nftcomponent} ${selectednftList[idx] ? styles.selected : \"\"}`} onClick = {() => changeSelectednftList(idx)}>\r\n                    {nft.tokenId} 의 NFT\r\n                </button>\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.integratenft}>\r\n            <div className={styles.nftinfo}>\r\n                <div className={styles.result}>\r\n                    RESULT MetaData\r\n                    {result !== null && <div>\r\n                        <div>tokenId : {result.tokenId}</div>\r\n                        <div>Column : {result.metaData.columns.join(\", \")}</div>\r\n                        <div>Data size : {result.metaData.dataSize}</div>\r\n                        <div>Null Ratio : {result.metaData.nullRatio}</div>\r\n                        </div>}\r\n                </div>\r\n                <button className={styles.makebutton}>\r\n                    Make Integrated NFT\r\n                </button>\r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>NFT LIST</div>\r\n                {RenderNFTList()}\r\n                <button className = {styles.integratebutton} onClick = {sendNFT}>\r\n                    Integrate {selectedNum} NFT\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IntegrateNFT;","C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\MintNFT\\MintNFT.jsx",[],[],"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\utils\\axios.js",[],[],"C:\\Users\\hsy99\\OneDrive\\바탕 화면\\prj1\\client\\src\\components\\utils\\axios1.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":9,"column":15,"nodeType":"73","endLine":19,"endColumn":8},{"ruleId":"74","severity":1,"message":"75","line":24,"column":15,"nodeType":"76","messageId":"77","endLine":24,"endColumn":22},{"ruleId":"74","severity":1,"message":"78","line":6,"column":21,"nodeType":"76","messageId":"77","endLine":6,"endColumn":31},{"ruleId":"71","severity":1,"message":"79","line":23,"column":10,"nodeType":"80","endLine":23,"endColumn":12,"suggestions":"81"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'payload' is assigned a value but never used.","Identifier","unusedVar","'setnftList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'nftList.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setselectednftList' needs the current value of 'nftList.length'.","ArrayExpression",["82"],{"desc":"83","fix":"84"},"Update the dependencies array to be: [nftList.length]",{"range":"85","text":"86"},[728,730],"[nftList.length]"]