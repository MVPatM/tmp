{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hsy99\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\prj1\\\\client\\\\src\\\\components\\\\IntegrateNFT\\\\IntegrateNFT.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from \"./integratenftcss.module.css\";\nimport apiClient from '../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntegrateNFT() {\n  _s();\n  const [nftList, setnftList] = useState([]);\n  const [selectedNum, setSelectedNum] = useState(0);\n  const [selectednftList, setselectednftList] = useState([]);\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    //get my info\n    apiClient.get(\"/integrateNFT\").then(res => {\n      setnftList(res.data.nfts);\n      setselectednftList(Array(nftList.length).fill(false));\n    }).catch(err => {\n      alert(`${err}`);\n    });\n  }, []);\n  const sendNFT = async () => {\n    let sendList = [];\n    for (let i = 0; i < nftList.length; i++) {\n      if (selectednftList[i] === true) {\n        sendList.push(nftList[i].tokenURI);\n      }\n    }\n    let sendList1 = [];\n    for (let i = 0; i < nftList.length; i++) {\n      if (selectednftList[i] === true) {\n        sendList1.push(nftList[i].tokenId);\n      }\n    }\n    const payload = {\n      tokenURI: sendList,\n      tokenId: sendList1\n    };\n    await apiClient.post(\"/integrateNFT/mint\", payload).then(res => {\n      if (res.data.isSuccess === true) {\n        setResult(res.data.nft);\n        alert('Integrated NFT mint success');\n      } else if (res.data.isSuccess === false) {\n        alert(`${res.data.msg}`);\n      }\n    }).catch(err => {\n      alert(`Integrated NFT Mint error ${err}`);\n    });\n  };\n  const changeSelectednftList = index => {\n    let copyList = [...selectednftList];\n    copyList[index] = !copyList[index];\n    if (copyList[index]) setSelectedNum(selectedNum + 1);else setSelectedNum(selectedNum - 1);\n    console.log(copyList[index]);\n    setselectednftList(copyList);\n  };\n  const RenderNFTList = () => {\n    return nftList.map((nft, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles.nftcomponent} ${selectednftList[idx] ? styles.selected : \"\"}`,\n      onClick: () => changeSelectednftList(idx),\n      children: [nft.tokenId, \" \\uC758 NFT\"]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.integratenft,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftinfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.result,\n        children: [\"RESULT MetaData\", result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"tokenId : \", result.tokenId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Column : \", result.metaData.columns.join(\", \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Data size : \", result.metaData.dataSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Null Ratio : \", result.metaData.nullRatio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.makebutton,\n        children: \"Make Integrated NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftlist,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"NFT LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), RenderNFTList(), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.integratebutton,\n        onClick: sendNFT,\n        children: [\"Integrate \", selectedNum, \" NFT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(IntegrateNFT, \"J38OZiEtzhxvxpt19I1rqiyzuQc=\");\n_c = IntegrateNFT;\nexport default IntegrateNFT;\nvar _c;\n$RefreshReg$(_c, \"IntegrateNFT\");","map":{"version":3,"names":["React","useState","useEffect","styles","apiClient","jsxDEV","_jsxDEV","IntegrateNFT","_s","nftList","setnftList","selectedNum","setSelectedNum","selectednftList","setselectednftList","result","setResult","get","then","res","data","nfts","Array","length","fill","catch","err","alert","sendNFT","sendList","i","push","tokenURI","sendList1","tokenId","payload","post","isSuccess","nft","msg","changeSelectednftList","index","copyList","console","log","RenderNFTList","map","idx","className","nftcomponent","selected","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","integratenft","nftinfo","metaData","columns","join","dataSize","nullRatio","makebutton","nftlist","title","integratebutton","_c","$RefreshReg$"],"sources":["C:/Users/hsy99/OneDrive/바탕 화면/prj1/client/src/components/IntegrateNFT/IntegrateNFT.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from \"./integratenftcss.module.css\";\r\nimport apiClient from '../utils/axios';\r\n\r\n\r\nfunction IntegrateNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [selectedNum, setSelectedNum] = useState(0);\r\n    const [selectednftList, setselectednftList] = useState([]);\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //get my info\r\n        apiClient\r\n          .get(\"/integrateNFT\")\r\n          .then((res) => {\r\n            setnftList(res.data.nfts);\r\n            setselectednftList(Array(nftList.length).fill(false));\r\n          })\r\n          .catch((err) => {\r\n            alert(`${err}`);\r\n          });\r\n      }, []);\r\n\r\n    const sendNFT = async () => {\r\n        let sendList = [];\r\n        for(let i = 0; i < nftList.length; i ++){\r\n            if(selectednftList[i] === true){\r\n                sendList.push(nftList[i].tokenURI);\r\n            }\r\n        }\r\n\r\n        let sendList1 = [];\r\n        for(let i = 0; i < nftList.length; i ++){\r\n            if(selectednftList[i] === true){\r\n                sendList1.push(nftList[i].tokenId);\r\n            }\r\n        }\r\n\r\n        const payload = {\r\n            tokenURI : sendList,\r\n            tokenId : sendList1\r\n        }\r\n\r\n        await apiClient.post(\"/integrateNFT/mint\", payload)\r\n            .then((res) => {\r\n                if (res.data.isSuccess === true){\r\n                    setResult(res.data.nft);\r\n                    alert('Integrated NFT mint success');\r\n                }\r\n                else if (res.data.isSuccess === false) {\r\n                    alert(`${res.data.msg}`);\r\n                }\r\n            })\r\n            .catch ((err) => {\r\n                alert(`Integrated NFT Mint error ${err}`);\r\n            })\r\n    }\r\n\r\n\r\n    const changeSelectednftList = (index) => {\r\n        let copyList = [...selectednftList];\r\n        copyList[index] = !copyList[index];\r\n        if(copyList[index]) setSelectedNum(selectedNum + 1);\r\n        else setSelectedNum(selectedNum - 1);\r\n        console.log(copyList[index]);\r\n        setselectednftList(copyList);\r\n    }\r\n\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                <button key = {idx} className = {`${styles.nftcomponent} ${selectednftList[idx] ? styles.selected : \"\"}`} onClick = {() => changeSelectednftList(idx)}>\r\n                    {nft.tokenId} 의 NFT\r\n                </button>\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.integratenft}>\r\n            <div className={styles.nftinfo}>\r\n                <div className={styles.result}>\r\n                    RESULT MetaData\r\n                    {result !== null && <div>\r\n                        <div>tokenId : {result.tokenId}</div>\r\n                        <div>Column : {result.metaData.columns.join(\", \")}</div>\r\n                        <div>Data size : {result.metaData.dataSize}</div>\r\n                        <div>Null Ratio : {result.metaData.nullRatio}</div>\r\n                        </div>}\r\n                </div>\r\n                <button className={styles.makebutton}>\r\n                    Make Integrated NFT\r\n                </button>\r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>NFT LIST</div>\r\n                {RenderNFTList()}\r\n                <button className = {styles.integratebutton} onClick = {sendNFT}>\r\n                    Integrate {selectedNum} NFT\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IntegrateNFT;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}