{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hsy99\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\prj1\\\\client\\\\src\\\\components\\\\MyNFT\\\\MyNFT.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from \"./mynftcss.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyNFT() {\n  _s();\n  const [nftList, setnftList] = useState([\"a NFT\", \"b NFT\", \"c NFT\", \"dnft\", \"c\", \"e\", \"f\", \"e\", \"f\", \"e\"]);\n  const [nftIndex, setnftIndex] = useState(0);\n  const RenderNFTList = () => {\n    return nftList.map((nft, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftcomponent,\n      onClick: () => setnftIndex(idx),\n      children: nft\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mynft,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftinfo,\n      children: [nftList[nftIndex], /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"- \\uC774 nft\\uC758 db\\uC815\\uBCF4\\uAC00 \\uD3EC\\uD568\\uB41C \\uD1B5\\uD569 nft\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"- \\uBC30\\uB2F9\\uB960 (%)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"- \\uC218\\uC775 (\\uC6D0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftlist,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"NFT LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), RenderNFTList()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(MyNFT, \"IbJbrk1lF83P0Q6wyOkVCJUinsA=\");\n_c = MyNFT;\nexport default MyNFT;\nvar _c;\n$RefreshReg$(_c, \"MyNFT\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","MyNFT","_s","nftList","setnftList","nftIndex","setnftIndex","RenderNFTList","map","nft","idx","className","nftcomponent","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","mynft","nftinfo","nftlist","title","_c","$RefreshReg$"],"sources":["C:/Users/hsy99/OneDrive/바탕 화면/prj1/client/src/components/MyNFT/MyNFT.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from \"./mynftcss.module.css\";\r\n\r\n\r\nfunction MyNFT(){\r\n    const [nftList, setnftList] = useState([\"a NFT\", \"b NFT\", \"c NFT\", \"dnft\",\"c\",\"e\",\"f\",\"e\",\"f\",\"e\"]);\r\n    const [nftIndex, setnftIndex] = useState(0);\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                <div key = {idx} className = {styles.nftcomponent} onClick = {() => setnftIndex(idx)}>\r\n                    {nft}\r\n                </div>\r\n            ))\r\n    }\r\n    return (\r\n        <div className={styles.mynft}>\r\n            <div className={styles.nftinfo}>\r\n                {nftList[nftIndex]}\r\n                <div>- 이 nft의 db정보가 포함된 통합 nft</div>\r\n                <div>- 배당률 (%)</div>\r\n                <div>- 수익 (원)</div>\r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>NFT LIST</div>\r\n                {RenderNFTList()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyNFT;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC;EACnG,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxB,OAAOJ,OAAO,CAACK,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACpBV,OAAA;MAAiBW,SAAS,EAAIb,MAAM,CAACc,YAAa;MAACC,OAAO,EAAIA,CAAA,KAAMP,WAAW,CAACI,GAAG,CAAE;MAAAI,QAAA,EAChFL;IAAG,GADIC,GAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACR,CAAC;EACV,CAAC;EACD,oBACIlB,OAAA;IAAKW,SAAS,EAAEb,MAAM,CAACqB,KAAM;IAAAL,QAAA,gBACzBd,OAAA;MAAKW,SAAS,EAAEb,MAAM,CAACsB,OAAQ;MAAAN,QAAA,GAC1BX,OAAO,CAACE,QAAQ,CAAC,eAClBL,OAAA;QAAAc,QAAA,EAAK;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpClB,OAAA;QAAAc,QAAA,EAAK;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBlB,OAAA;QAAAc,QAAA,EAAK;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACNlB,OAAA;MAAKW,SAAS,EAAEb,MAAM,CAACuB,OAAQ;MAAAP,QAAA,gBAC3Bd,OAAA;QAAKW,SAAS,EAAIb,MAAM,CAACwB,KAAM;QAAAR,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC7CX,aAAa,CAAC,CAAC;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CAxBQD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA0Bd,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}