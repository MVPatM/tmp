{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hsy99\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\prj1\\\\client\\\\src\\\\components\\\\IntegrateNFT\\\\IntegrateNFT.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./integratenftcss.module.css\";\nimport apiClient from '../utils/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntegrateNFT() {\n  _s();\n  const [nftList, setnftList] = useState([]);\n  const [selectedNum, setSelectedNum] = useState(0);\n  const [selectednftList, setselectednftList] = useState([]);\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    //get my info\n    apiClient.get(\"/myNFT\").then(res => {\n      setnftList(res.data);\n      setselectednftList(Array(nftList.length).fill(false));\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  const sendNFT = () => {\n    let sendList = [];\n    for (let i = 0; i < nftList.length; i++) {\n      if (selectednftList[i] === true) {\n        sendList.push(nftList[i]);\n      }\n    }\n    apiClient.post(\"/integrateNFT\", sendList).then(res => {});\n  };\n  const changeSelectednftList = index => {\n    let copyList = [...selectednftList];\n    copyList[index] = !copyList[index];\n    if (copyList[index]) setSelectedNum(selectedNum + 1);else setSelectedNum(selectedNum - 1);\n    console.log(copyList[index]);\n    setselectednftList(copyList);\n  };\n  const RenderNFTList = () => {\n    return nftList.map((nft, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles.nftcomponent} ${selectednftList[idx] ? styles.selected : \"\"}`,\n      onClick: () => changeSelectednftList(idx),\n      children: nft\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.integratenft,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftinfo,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.result,\n        children: [\"RESULT MetaData\", result !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Colunm : \", result.metaData.columns]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Data size : \", result.metaData.dataSize]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Null Ratio : \", result.metaData.nullRatio]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.makebutton,\n        children: \"Make Integrated NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftlist,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"NFT LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), RenderNFTList(), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.integratebutton,\n        onClick: sendNFT,\n        children: [\"Integrate \", selectedNum, \" NFT\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(IntegrateNFT, \"J38OZiEtzhxvxpt19I1rqiyzuQc=\");\n_c = IntegrateNFT;\nexport default IntegrateNFT;\nvar _c;\n$RefreshReg$(_c, \"IntegrateNFT\");","map":{"version":3,"names":["React","useEffect","useState","styles","apiClient","jsxDEV","_jsxDEV","IntegrateNFT","_s","nftList","setnftList","selectedNum","setSelectedNum","selectednftList","setselectednftList","result","setResult","get","then","res","data","Array","length","fill","catch","e","console","log","sendNFT","sendList","i","push","post","changeSelectednftList","index","copyList","RenderNFTList","map","nft","idx","className","nftcomponent","selected","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","integratenft","nftinfo","metaData","columns","dataSize","nullRatio","makebutton","nftlist","title","integratebutton","_c","$RefreshReg$"],"sources":["C:/Users/hsy99/OneDrive/바탕 화면/prj1/client/src/components/IntegrateNFT/IntegrateNFT.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from \"./integratenftcss.module.css\";\r\nimport apiClient from '../utils/axios';\r\n\r\n\r\nfunction IntegrateNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [selectedNum, setSelectedNum] = useState(0);\r\n    const [selectednftList, setselectednftList] = useState([]);\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //get my info\r\n        apiClient\r\n          .get(\"/myNFT\")\r\n          .then((res) => {\r\n            setnftList(res.data);\r\n            setselectednftList(Array(nftList.length).fill(false));\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      }, []);\r\n\r\n\r\n    const sendNFT = () => {\r\n        let sendList = [];\r\n        for(let i = 0; i < nftList.length; i ++){\r\n            if(selectednftList[i] === true){\r\n                sendList.push(nftList[i]);\r\n            }\r\n        }\r\n        apiClient.post(\"/integrateNFT\", sendList)\r\n            .then((res) => {\r\n                \r\n            })\r\n    }\r\n\r\n\r\n    const changeSelectednftList = (index) => {\r\n        let copyList = [...selectednftList];\r\n        copyList[index] = !copyList[index];\r\n        if(copyList[index]) setSelectedNum(selectedNum + 1);\r\n        else setSelectedNum(selectedNum - 1);\r\n        console.log(copyList[index]);\r\n        setselectednftList(copyList);\r\n    }\r\n\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                \r\n                <button key = {idx} className = {`${styles.nftcomponent} ${selectednftList[idx] ? styles.selected : \"\"}`} onClick = {() => changeSelectednftList(idx)}>\r\n                    {nft}\r\n                </button>\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.integratenft}>\r\n            <div className={styles.nftinfo}>\r\n                <div className={styles.result}>\r\n                    RESULT MetaData\r\n                    {result !== null && <div>\r\n                        <div>Colunm : {result.metaData.columns}</div>\r\n                        <div>Data size : {result.metaData.dataSize}</div>\r\n                        <div>Null Ratio : {result.metaData.nullRatio}</div>\r\n                        </div>}\r\n                </div>\r\n                <button className={styles.makebutton}>\r\n                    Make Integrated NFT\r\n                </button>\r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>NFT LIST</div>\r\n                {RenderNFTList()}\r\n                <button className = {styles.integratebutton} onClick = {sendNFT}>\r\n                    Integrate {selectedNum} NFT\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IntegrateNFT;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}