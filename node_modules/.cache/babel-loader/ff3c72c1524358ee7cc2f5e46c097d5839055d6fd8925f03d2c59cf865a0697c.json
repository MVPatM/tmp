{"ast":null,"code":"import _toConsumableArray from\"C:/Users/hsy99/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/prj1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/hsy99/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/prj1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import styles from\"./integratenftcss.module.css\";import apiClient from'../utils/axios';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function IntegrateNFT(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),nftList=_useState2[0],setnftList=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),selectedNum=_useState4[0],setSelectedNum=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),selectednftList=_useState6[0],setselectednftList=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),result=_useState8[0],setResult=_useState8[1];useEffect(function(){//get my info\napiClient.get(\"/integrateNFT\").then(function(res){setnftList(res.data.nfts);setselectednftList(Array(nftList.length).fill(false));}).catch(function(err){alert(\"\".concat(err));});},[]);var sendNFT=function sendNFT(){var sendList=[];for(var i=0;i<nftList.length;i++){if(selectednftList[i]===true){sendList.push(nftList[i].tokenURI);}}alert(\"\".concat(typeof sendList));var formData=new FormData();formData.append('tokenURI',sendList);alert(\"\".concat(typeof formData));apiClient.post(\"/integrateNFT/mint\",formData).then(function(res){if(res.data.isSuccess===true){setResult(res.data.nft);alert('Integrated NFT mint success');}else if(res.data.isSuccess===false){alert(\"\".concat(res.data.msg));}}).catch(function(err){alert(\"Integrated NFT Mint error \".concat(err));});};var changeSelectednftList=function changeSelectednftList(index){var copyList=_toConsumableArray(selectednftList);copyList[index]=!copyList[index];if(copyList[index])setSelectedNum(selectedNum+1);else setSelectedNum(selectedNum-1);console.log(copyList[index]);setselectednftList(copyList);};var RenderNFTList=function RenderNFTList(){return nftList.map(function(nft,idx){return/*#__PURE__*/_jsxs(\"button\",{className:\"\".concat(styles.nftcomponent,\" \").concat(selectednftList[idx]?styles.selected:\"\"),onClick:function onClick(){return changeSelectednftList(idx);},children:[nft.tokenId,\" \\uC758 NFT\"]},idx);});};return/*#__PURE__*/_jsxs(\"div\",{className:styles.integratenft,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.nftinfo,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.result,children:[\"RESULT MetaData\",result!==null&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Colunm : \",result.tokenId]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Colunm : \",result.metaData.columns]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Data size : \",result.metaData.dataSize]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Null Ratio : \",result.metaData.nullRatio]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:styles.makebutton,children:\"Make Integrated NFT\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.nftlist,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:\"NFT LIST\"}),RenderNFTList(),/*#__PURE__*/_jsxs(\"button\",{className:styles.integratebutton,onClick:sendNFT,children:[\"Integrate \",selectedNum,\" NFT\"]})]})]});}export default IntegrateNFT;","map":{"version":3,"names":["React","useState","useEffect","styles","apiClient","jsxs","_jsxs","jsx","_jsx","IntegrateNFT","_useState","_useState2","_slicedToArray","nftList","setnftList","_useState3","_useState4","selectedNum","setSelectedNum","_useState5","_useState6","selectednftList","setselectednftList","_useState7","_useState8","result","setResult","get","then","res","data","nfts","Array","length","fill","catch","err","alert","concat","sendNFT","sendList","i","push","tokenURI","formData","FormData","append","post","isSuccess","nft","msg","changeSelectednftList","index","copyList","_toConsumableArray","console","log","RenderNFTList","map","idx","className","nftcomponent","selected","onClick","children","tokenId","integratenft","nftinfo","metaData","columns","dataSize","nullRatio","makebutton","nftlist","title","integratebutton"],"sources":["C:/Users/hsy99/OneDrive/바탕 화면/prj1/client/src/components/IntegrateNFT/IntegrateNFT.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from \"./integratenftcss.module.css\";\r\nimport apiClient from '../utils/axios';\r\n\r\n\r\nfunction IntegrateNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [selectedNum, setSelectedNum] = useState(0);\r\n    const [selectednftList, setselectednftList] = useState([]);\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //get my info\r\n        apiClient\r\n          .get(\"/integrateNFT\")\r\n          .then((res) => {\r\n            setnftList(res.data.nfts);\r\n            setselectednftList(Array(nftList.length).fill(false));\r\n          })\r\n          .catch((err) => {\r\n            alert(`${err}`);\r\n          });\r\n      }, []);\r\n\r\n    const sendNFT = () => {\r\n        let sendList = [];\r\n        for(let i = 0; i < nftList.length; i ++){\r\n            if(selectednftList[i] === true){\r\n                sendList.push(nftList[i].tokenURI);\r\n            }\r\n        }\r\n\r\n        alert(`${typeof(sendList)}`);\r\n        const formData = new FormData();\r\n        formData.append('tokenURI', sendList);\r\n        alert(`${typeof(formData)}`);\r\n        \r\n        apiClient.post(\"/integrateNFT/mint\", formData)\r\n            .then((res) => {\r\n                if (res.data.isSuccess === true){\r\n                    setResult(res.data.nft);\r\n                    alert('Integrated NFT mint success');\r\n                }\r\n                else if (res.data.isSuccess === false) {\r\n                    alert(`${res.data.msg}`);\r\n                }\r\n            })\r\n            .catch ((err) => {\r\n                alert(`Integrated NFT Mint error ${err}`);\r\n            })\r\n    }\r\n\r\n\r\n    const changeSelectednftList = (index) => {\r\n        let copyList = [...selectednftList];\r\n        copyList[index] = !copyList[index];\r\n        if(copyList[index]) setSelectedNum(selectedNum + 1);\r\n        else setSelectedNum(selectedNum - 1);\r\n        console.log(copyList[index]);\r\n        setselectednftList(copyList);\r\n    }\r\n\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                <button key = {idx} className = {`${styles.nftcomponent} ${selectednftList[idx] ? styles.selected : \"\"}`} onClick = {() => changeSelectednftList(idx)}>\r\n                    {nft.tokenId} 의 NFT\r\n                </button>\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.integratenft}>\r\n            <div className={styles.nftinfo}>\r\n                <div className={styles.result}>\r\n                    RESULT MetaData\r\n                    {result !== null && <div>\r\n                        <div>Colunm : {result.tokenId}</div>\r\n                        <div>Colunm : {result.metaData.columns}</div>\r\n                        <div>Data size : {result.metaData.dataSize}</div>\r\n                        <div>Null Ratio : {result.metaData.nullRatio}</div>\r\n                        </div>}\r\n                </div>\r\n                <button className={styles.makebutton}>\r\n                    Make Integrated NFT\r\n                </button>\r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>NFT LIST</div>\r\n                {RenderNFTList()}\r\n                <button className = {styles.integratebutton} onClick = {sendNFT}>\r\n                    Integrate {selectedNum} NFT\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IntegrateNFT;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}