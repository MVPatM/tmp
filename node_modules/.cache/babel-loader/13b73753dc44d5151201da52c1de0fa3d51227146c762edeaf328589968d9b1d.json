{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hsy99\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\prj1\\\\client\\\\src\\\\components\\\\MintNFT\\\\MintNFT.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from \"./mintnftcss.module.css\";\nimport apiClient from '../utils/axios1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MintNFT() {\n  _s();\n  const [minting, setMinting] = useState(false);\n  const [uploaded, setUploaded] = useState(false);\n  const [mintedNFT, setMintedNFT] = useState(null);\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = async event => {\n    event.preventDefault();\n    setUploaded(true);\n    const file = event.dataTransfer.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    await apiClient.post(\"mintNFT/upload\", formData).then(res => {\n      if (res.data.ismintsuccess === true) {\n        setMinting(true);\n        setMintedNFT(res.data.nft);\n        alert('mint success');\n      } else if (res.data.ismintsuccess === false) {\n        alert(`${res.data.msg}`);\n      }\n    }).catch(err => {\n      alert(`Mint error ${err}`);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mintnft,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.fileupload,\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [minting === false && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dragmessage,\n        children: uploaded ? \"Minting ...\" : \"Drag your csv file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 35\n      }, this), minting === true && mintedNFT && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dragmessage,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.result,\n          children: \"Result MetaData\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"tokenId : \", mintedNFT.tokenId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"owner : \", mintedNFT.owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Column : \", mintedNFT.metaData.columns.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Data size : \", mintedNFT.metaData.dataSize]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Null Ratio : \", mintedNFT.metaData.nullRatio]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(MintNFT, \"qGX++bvZ4VnbaYzFO0WSkdPuE50=\");\n_c = MintNFT;\nexport default MintNFT;\nvar _c;\n$RefreshReg$(_c, \"MintNFT\");","map":{"version":3,"names":["React","useState","styles","apiClient","jsxDEV","_jsxDEV","MintNFT","_s","minting","setMinting","uploaded","setUploaded","mintedNFT","setMintedNFT","handleDragOver","event","preventDefault","handleDrop","file","dataTransfer","files","formData","FormData","append","post","then","res","data","ismintsuccess","nft","alert","msg","catch","err","className","mintnft","children","fileupload","onDragOver","onDrop","dragmessage","fileName","_jsxFileName","lineNumber","columnNumber","result","tokenId","owner","metaData","columns","join","dataSize","nullRatio","_c","$RefreshReg$"],"sources":["C:/Users/hsy99/OneDrive/바탕 화면/prj1/client/src/components/MintNFT/MintNFT.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from \"./mintnftcss.module.css\";\r\nimport apiClient from '../utils/axios1';\r\n\r\n\r\nfunction MintNFT(){\r\n    const [minting, setMinting] = useState(false);\r\n    const [uploaded, setUploaded] = useState(false);\r\n    const [mintedNFT, setMintedNFT] = useState(null);\r\n    const handleDragOver = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleDrop = async (event) => {\r\n        event.preventDefault();\r\n        setUploaded(true);\r\n        const file = event.dataTransfer.files[0];\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        \r\n        await apiClient\r\n            .post(\"mintNFT/upload\", formData)\r\n            .then((res) => {\r\n                if (res.data.ismintsuccess === true){\r\n                    setMinting(true);\r\n                    setMintedNFT(res.data.nft);\r\n                    alert('mint success');\r\n                }\r\n                else if (res.data.ismintsuccess === false) {\r\n                    alert(`${res.data.msg}`);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(`Mint error ${err}`);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.mintnft}>\r\n            <div className={styles.fileupload} onDragOver = {handleDragOver} onDrop = {handleDrop}>\r\n            {minting === false && <div className={styles.dragmessage}>{uploaded ? \"Minting ...\" : \"Drag your csv file\"}</div>}\r\n            {minting === true && mintedNFT && ( <div className={styles.dragmessage}>\r\n                <div className = {styles.result}>Result MetaData</div>\r\n                <div>tokenId : {mintedNFT.tokenId}</div>\r\n                <div>owner : {mintedNFT.owner}</div>\r\n                <div>Column : {mintedNFT.metaData.columns.join(\", \")}</div>\r\n                <div>Data size : {mintedNFT.metaData.dataSize}</div>\r\n                <div>Null Ratio : {mintedNFT.metaData.nullRatio}</div>\r\n                </div>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MintNFT;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}