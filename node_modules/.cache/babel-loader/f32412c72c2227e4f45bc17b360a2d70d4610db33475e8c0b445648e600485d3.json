{"ast":null,"code":"import _toConsumableArray from\"C:/Users/hsy99/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/prj1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/hsy99/OneDrive/\\uBC14\\uD0D5 \\uD654\\uBA74/prj1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import styles from\"./integratenftcss.module.css\";import apiClient from'../utils/axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function IntegrateNFT(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),nftList=_useState2[0],setnftList=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),selectedNum=_useState4[0],setSelectedNum=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),selectednftList=_useState6[0],setselectednftList=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),result=_useState8[0],setResult=_useState8[1];useEffect(function(){//get my info\napiClient.get(\"/myNFT\").then(function(res){setnftList(res.data);setselectednftList(Array(nftList.length).fill(false));}).catch(function(e){console.log(e);});},[]);var sendNFT=function sendNFT(){var sendList=[];for(var i=0;i<nftList.length;i++){if(selectednftList[i]===true){sendList.push(nftList[i]);}}apiClient.post(\"/integrateNFT\",sendList).then(function(res){});};var changeSelectednftList=function changeSelectednftList(index){var copyList=_toConsumableArray(selectednftList);copyList[index]=!copyList[index];if(copyList[index])setSelectedNum(selectedNum+1);else setSelectedNum(selectedNum-1);console.log(copyList[index]);setselectednftList(copyList);};var RenderNFTList=function RenderNFTList(){return nftList.map(function(nft,idx){return/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(styles.nftcomponent,\" \").concat(selectednftList[idx]?styles.selected:\"\"),onClick:function onClick(){return changeSelectednftList(idx);},children:nft},idx);});};return/*#__PURE__*/_jsxs(\"div\",{className:styles.integratenft,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.nftinfo,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.result,children:[\"RESULT MetaData\",result!==null&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Colunm : \",result.metaData.columns]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Data size : \",result.metaData.dataSize]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Null Ratio : \",result.metaData.nullRatio]})]})]}),/*#__PURE__*/_jsx(\"button\",{className:styles.makebutton,children:\"Make Integrated NFT\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.nftlist,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:\"NFT LIST\"}),RenderNFTList(),/*#__PURE__*/_jsxs(\"button\",{className:styles.integratebutton,onClick:sendNFT,children:[\"Integrate \",selectedNum,\" NFT\"]})]})]});}export default IntegrateNFT;","map":{"version":3,"names":["React","useEffect","useState","styles","apiClient","jsx","_jsx","jsxs","_jsxs","IntegrateNFT","_useState","_useState2","_slicedToArray","nftList","setnftList","_useState3","_useState4","selectedNum","setSelectedNum","_useState5","_useState6","selectednftList","setselectednftList","_useState7","_useState8","result","setResult","get","then","res","data","Array","length","fill","catch","e","console","log","sendNFT","sendList","i","push","post","changeSelectednftList","index","copyList","_toConsumableArray","RenderNFTList","map","nft","idx","className","concat","nftcomponent","selected","onClick","children","integratenft","nftinfo","metaData","columns","dataSize","nullRatio","makebutton","nftlist","title","integratebutton"],"sources":["C:/Users/hsy99/OneDrive/바탕 화면/prj1/client/src/components/IntegrateNFT/IntegrateNFT.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styles from \"./integratenftcss.module.css\";\r\nimport apiClient from '../utils/axios';\r\n\r\n\r\nfunction IntegrateNFT(){\r\n    const [nftList, setnftList] = useState([]);\r\n    const [selectedNum, setSelectedNum] = useState(0);\r\n    const [selectednftList, setselectednftList] = useState([]);\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //get my info\r\n        apiClient\r\n          .get(\"/myNFT\")\r\n          .then((res) => {\r\n            setnftList(res.data);\r\n            setselectednftList(Array(nftList.length).fill(false));\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n      }, []);\r\n\r\n\r\n    const sendNFT = () => {\r\n        let sendList = [];\r\n        for(let i = 0; i < nftList.length; i ++){\r\n            if(selectednftList[i] === true){\r\n                sendList.push(nftList[i]);\r\n            }\r\n        }\r\n        apiClient.post(\"/integrateNFT\", sendList)\r\n            .then((res) => {\r\n                \r\n            })\r\n    }\r\n\r\n\r\n    const changeSelectednftList = (index) => {\r\n        let copyList = [...selectednftList];\r\n        copyList[index] = !copyList[index];\r\n        if(copyList[index]) setSelectedNum(selectedNum + 1);\r\n        else setSelectedNum(selectedNum - 1);\r\n        console.log(copyList[index]);\r\n        setselectednftList(copyList);\r\n    }\r\n\r\n    const RenderNFTList = () => {\r\n        return nftList.map((nft, idx) => (\r\n                \r\n                <button key = {idx} className = {`${styles.nftcomponent} ${selectednftList[idx] ? styles.selected : \"\"}`} onClick = {() => changeSelectednftList(idx)}>\r\n                    {nft}\r\n                </button>\r\n            ))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.integratenft}>\r\n            <div className={styles.nftinfo}>\r\n                <div className={styles.result}>\r\n                    RESULT MetaData\r\n                    {result !== null && <div>\r\n                        <div>Colunm : {result.metaData.columns}</div>\r\n                        <div>Data size : {result.metaData.dataSize}</div>\r\n                        <div>Null Ratio : {result.metaData.nullRatio}</div>\r\n                        </div>}\r\n                </div>\r\n                <button className={styles.makebutton}>\r\n                    Make Integrated NFT\r\n                </button>\r\n            </div>\r\n            <div className={styles.nftlist}>\r\n                <div className = {styles.title}>NFT LIST</div>\r\n                {RenderNFTList()}\r\n                <button className = {styles.integratebutton} onClick = {sendNFT}>\r\n                    Integrate {selectedNum} NFT\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IntegrateNFT;"],"mappings":"8SAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,8BAA8B,CACjD,MAAO,CAAAC,SAAS,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAGvC,QAAS,CAAAC,YAAYA,CAAA,CAAE,CACnB,IAAAC,SAAA,CAA8BR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,OAAO,CAAAF,UAAA,IAAEG,UAAU,CAAAH,UAAA,IAC1B,IAAAI,UAAA,CAAsCb,QAAQ,CAAC,CAAC,CAAC,CAAAc,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA1CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAA8CjB,QAAQ,CAAC,EAAE,CAAC,CAAAkB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAnDE,eAAe,CAAAD,UAAA,IAAEE,kBAAkB,CAAAF,UAAA,IAC1C,IAAAG,UAAA,CAA4BrB,QAAQ,CAAC,IAAI,CAAC,CAAAsB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAnCE,MAAM,CAAAD,UAAA,IAAEE,SAAS,CAAAF,UAAA,IAExBvB,SAAS,CAAC,UAAM,CACZ;AACAG,SAAS,CACNuB,GAAG,CAAC,QAAQ,CAAC,CACbC,IAAI,CAAC,SAACC,GAAG,CAAK,CACbf,UAAU,CAACe,GAAG,CAACC,IAAI,CAAC,CACpBR,kBAAkB,CAACS,KAAK,CAAClB,OAAO,CAACmB,MAAM,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC,CACvD,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,CAAC,CAAK,CACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAChB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAGR,GAAM,CAAAG,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CAClB,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,IAAI,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG3B,OAAO,CAACmB,MAAM,CAAEQ,CAAC,EAAG,CAAC,CACpC,GAAGnB,eAAe,CAACmB,CAAC,CAAC,GAAK,IAAI,CAAC,CAC3BD,QAAQ,CAACE,IAAI,CAAC5B,OAAO,CAAC2B,CAAC,CAAC,CAAC,CAC7B,CACJ,CACApC,SAAS,CAACsC,IAAI,CAAC,eAAe,CAAEH,QAAQ,CAAC,CACpCX,IAAI,CAAC,SAACC,GAAG,CAAK,CAEf,CAAC,CAAC,CACV,CAAC,CAGD,GAAM,CAAAc,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAIC,KAAK,CAAK,CACrC,GAAI,CAAAC,QAAQ,CAAAC,kBAAA,CAAOzB,eAAe,CAAC,CACnCwB,QAAQ,CAACD,KAAK,CAAC,CAAG,CAACC,QAAQ,CAACD,KAAK,CAAC,CAClC,GAAGC,QAAQ,CAACD,KAAK,CAAC,CAAE1B,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CAAC,IAC/C,CAAAC,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CACpCmB,OAAO,CAACC,GAAG,CAACQ,QAAQ,CAACD,KAAK,CAAC,CAAC,CAC5BtB,kBAAkB,CAACuB,QAAQ,CAAC,CAChC,CAAC,CAED,GAAM,CAAAE,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CACxB,MAAO,CAAAlC,OAAO,CAACmC,GAAG,CAAC,SAACC,GAAG,CAAEC,GAAG,qBAEpB5C,IAAA,WAAoB6C,SAAS,IAAAC,MAAA,CAAOjD,MAAM,CAACkD,YAAY,MAAAD,MAAA,CAAI/B,eAAe,CAAC6B,GAAG,CAAC,CAAG/C,MAAM,CAACmD,QAAQ,CAAG,EAAE,CAAG,CAACC,OAAO,CAAI,SAAAA,QAAA,QAAM,CAAAZ,qBAAqB,CAACO,GAAG,CAAC,EAAC,CAAAM,QAAA,CACjJP,GAAG,EADOC,GAEP,CAAC,EACZ,CAAC,CACV,CAAC,CAED,mBACI1C,KAAA,QAAK2C,SAAS,CAAEhD,MAAM,CAACsD,YAAa,CAAAD,QAAA,eAChChD,KAAA,QAAK2C,SAAS,CAAEhD,MAAM,CAACuD,OAAQ,CAAAF,QAAA,eAC3BhD,KAAA,QAAK2C,SAAS,CAAEhD,MAAM,CAACsB,MAAO,CAAA+B,QAAA,EAAC,iBAE3B,CAAC/B,MAAM,GAAK,IAAI,eAAIjB,KAAA,QAAAgD,QAAA,eAChBhD,KAAA,QAAAgD,QAAA,EAAK,WAAS,CAAC/B,MAAM,CAACkC,QAAQ,CAACC,OAAO,EAAM,CAAC,cAC7CpD,KAAA,QAAAgD,QAAA,EAAK,cAAY,CAAC/B,MAAM,CAACkC,QAAQ,CAACE,QAAQ,EAAM,CAAC,cACjDrD,KAAA,QAAAgD,QAAA,EAAK,eAAa,CAAC/B,MAAM,CAACkC,QAAQ,CAACG,SAAS,EAAM,CAAC,EAC9C,CAAC,EACT,CAAC,cACNxD,IAAA,WAAQ6C,SAAS,CAAEhD,MAAM,CAAC4D,UAAW,CAAAP,QAAA,CAAC,qBAEtC,CAAQ,CAAC,EACR,CAAC,cACNhD,KAAA,QAAK2C,SAAS,CAAEhD,MAAM,CAAC6D,OAAQ,CAAAR,QAAA,eAC3BlD,IAAA,QAAK6C,SAAS,CAAIhD,MAAM,CAAC8D,KAAM,CAAAT,QAAA,CAAC,UAAQ,CAAK,CAAC,CAC7CT,aAAa,CAAC,CAAC,cAChBvC,KAAA,WAAQ2C,SAAS,CAAIhD,MAAM,CAAC+D,eAAgB,CAACX,OAAO,CAAIjB,OAAQ,CAAAkB,QAAA,EAAC,YACnD,CAACvC,WAAW,CAAC,MAC3B,EAAQ,CAAC,EACR,CAAC,EACL,CAAC,CAEd,CAEA,cAAe,CAAAR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}